@page "/mortgage"
@inject MortgageCalculator MortgageCalc
@using Microsoft.AspNetCore.Components
@using System.Globalization
@using Financr.Utils

<PageTitle>Mortgage Calc</PageTitle>

<MudCard>
    <MudCardContent>
        <MudText>This tool is designed to help roughly calculate buying a house in Scotland, taking into account both LBTT and ADS.</MudText>
        @*<MudText Typo="Typo.body2"></MudText>*@
    </MudCardContent>
    <MudCardContent>
        <MudStack Row="true">
            <MudNumericField Format="N2" Label="Purchase Price" Culture="@enGb" T="decimal" @bind-Value="MortgageCalc.PurchasePrice" HelperText="@MortgageCalc.PurchasePrice.ToString()" />
            <MudNumericField Format="N2" Label="Deposit" Culture="@enGb" T="decimal" @bind-Value="MortgageCalc.Deposit" HelperText="@MortgageCalc.PurchasePrice.ToString()" />
            <MudNumericField Format="N2" Label="Mortgage rate" Culture="@enGb" T="decimal" @bind-Value="MortgageCalc.InterestRate" />
            <MudNumericField Label="Mortage years" @bind-Value="MortgageCalc.Years" />
        </MudStack>
        <MudCardActions>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="MortgageCalc.Calculate">Calculate</MudButton>
        </MudCardActions>
    </MudCardContent>
</MudCard>

<MudCard>
    <MudCardContent>
        <MudText>Breakdown</MudText>
    </MudCardContent>
    <MudCardContent>
        <hr />
        <p>Purchase price: £@MortgageCalc.PurchasePrice</p>
        <p>Deposit: £@MortgageCalc.Deposit</p>
        <p>LBTT: £@MortgageCalc.Lbtt</p>
        <p>ADS: £@MortgageCalc.Ads</p>
        <br />
        <p>Total purchase price: £@MortgageCalc.Total</p>
        <p>Mortgage required: £@(MortgageCalc.MortgageAmount)</p>
        <p>Mortgage payments: £@string.Format("{0:0.00}", MortgageCalc.MonthlyMortgagePayments()) per month</p>
        <p>Cash required (no ADS): £@(MortgageCalc.Lbtt + MortgageCalc.Deposit) (£@MortgageCalc.Deposit + £@(MortgageCalc.Lbtt))</p>
        <p>Cash required (with ADS): £@(MortgageCalc.Lbtt + MortgageCalc.Ads + MortgageCalc.Deposit) (£@MortgageCalc.Deposit + £@(MortgageCalc.Lbtt + MortgageCalc.Ads))</p>
    </MudCardContent>
</MudCard>

<MudTable Items="@MortgageCalc.CalculateAmortization().YearlyStatements" Hover="true" Breakpoint="Breakpoint.Sm" LoadingProgressColor="Color.Info">
    <HeaderContent>
        <MudTh>Year</MudTh>
        <MudTh>Start Balance</MudTh>
        <MudTh>Interest</MudTh>
        <MudTh>Principal</MudTh>
        <MudTh>Ending Balance</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Year">@context.Period</MudTd>
        <MudTd DataLabel="Start Balance">@AmortizationStatement.FormatDecimal(context.StartBalance)</MudTd>
        <MudTd DataLabel="Interest">@AmortizationStatement.FormatDecimal(context.Interest)</MudTd>
        <MudTd DataLabel="Principal">@AmortizationStatement.FormatDecimal(context.Principal)</MudTd>
        <MudTd DataLabel="Ending Balance">@AmortizationStatement.FormatDecimal(context.EndingBalance)</MudTd>
    </RowTemplate>
</MudTable>

@code {
    public CultureInfo enGb = CultureInfo.GetCultureInfo("en-GB");

    protected override Task OnInitializedAsync()
    {
        MortgageCalc.PurchasePrice = 170_000;
        MortgageCalc.Deposit = 10_000;
        MortgageCalc.InterestRate= 4.64m;
        MortgageCalc.Years = 25;
        MortgageCalc.Calculate();
        return Task.CompletedTask;
    }
}
